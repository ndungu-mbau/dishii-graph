type Query {
  hello: String

  tables: [table]
  table(table: Utable!): table

  meals: [meal]
  meal(meal: Umeal!): meal

  instances: [instance]
  instance(instance: Uinstance!): instance

  orders: [order]
  order(order: Uorder!): order

  sessions: [session]
  session(session: Usession!): session

  bills: [bill]
  bill(bill: Ubill!): bill
}

type Mutation {
  hello: String

  tables: tableMutations
  meals: mealMutations
  instances: instanceMutations
  orders: orderMutations
  sessions: sessionMutations
  bills: billMutations
}

# table stuff
type table{
  id: String
  seats: Int
  device: String
  number: Int
}

input Itable{
  seats: Int!
  device: String!
  number: Int!
}

input Utable{
  id: String!
  seats: Int
  device: String
  number: Int
}

type tableMutations{
  create(table: Itable!): table
  update(table: Utable!): table
  archive(table: Utable!): table
  restore(table: Utable!): table
}

# meal stuff
type meal{
  id: String
  name: String
  items: [String]
  img: String
  price: Float
}

input Imeal{
  name: String!
  items: [String]!
  img: String!
  price: Float!
}

input Umeal{
  id: String!
  name: String
  items: [String]
  img: String
  price: Float
}

type mealMutations{
  create(meal: Imeal!): meal
  update(meal: Umeal!): meal
  archive(meal: Umeal!): meal
  restore(meal: Umeal!): meal
}

# instance stuff
type instance{
  id: String
  meal: meal
  order: order
  amount: Int
}

input Iinstance{
  meal: String!
  order: String!
  amount: Int!
}

input Uinstance{
  id: String!
  meal: String
  order: String
  amount: Int
}

type instanceMutations{
  create(instance: Iinstance!): instance
  update(instance: Uinstance!): instance
  archive(instance: Uinstance!): instance
  restore(instance: Uinstance!): instance
}

# order stuff
type order{
  id: String
  number: Int
  meals: [instance]
  session: session
  total: Float
}

input Iorder{
  session: String!
}

input Uorder{
  id: String!
  session: String
}

type orderMutations{
  create(order: Iorder!): order
  archive(order: Uorder!): order
  restore(order: Uorder!): order
}

# session stuff
type session{
  id: String
  start_time: String
  end_time: String
  table: table
  orders: [order]
  bill: bill
}

input Isession{
  table: String!
}

input Usession{
  id: String!
  table: String
  end_time: String
}

type sessionMutations{
  create(session: Isession!): session
  update(session: Usession!): session
  archive(session: Usession!): session
  restore(session: Usession!): session
}

# bill stuff
type bill{
  id: String
  session: session
  total: Float
  # payment: payment
}

input Ibill{
  session: String!
}

input Ubill{
  id: String!
}

type billMutations{
  create(bill: Ibill!): bill
  update(bill: Ubill!): bill
  archive(bill: Ubill!): bill
  restore(bill: Ubill!): bill
}